-- ✒️ **Ejercicio hecho por Juan Jesús Alejo Sillero con asistencia de Alejandro Montes Delgado**

-- Modificaciones a tener en cuenta del ejercicio 3 antes de ejecutar el ejercicio 5:

ALTER TABLE VUELOS ADD DISTANCIA NUMBER(15,2);
ALTER TABLE VUELOS ADD DURACION DATE;

UPDATE VUELOS SET DISTANCIA=397, DURACION=TO_DATE('1:00','HH24:MI') WHERE CODVUELO='IB-3949';
UPDATE VUELOS SET DISTANCIA=810.30, DURACION=TO_DATE('1:30','HH24:MI') WHERE CODVUELO='IB-5940';
UPDATE VUELOS SET DISTANCIA=203, DURACION=TO_DATE('0:52','HH24:MI') WHERE CODVUELO='VY-3924';
UPDATE VUELOS SET DISTANCIA=859, DURACION=TO_DATE('2:00','HH24:MI') WHERE CODVUELO='AF-1149';
UPDATE VUELOS SET DISTANCIA=2245, DURACION=TO_DATE('3:25','HH24:MI') WHERE CODVUELO='QR-3776';
UPDATE VUELOS SET DISTANCIA=555.99, DURACION=TO_DATE('1:11','HH24:MI') WHERE CODVUELO='UX-6013';

------------------------------------------------------------------------------------------------------

-- 1. Rellena las columnas HORASDEVUELO de la tabla AERONAVES mediante un procedimiento con los datos existentes en las tablas VUELOS y VIAJES. Realiza un trigger que la mantenga actualizada automáticamente ante cualquier cambio en la base de datos.

-- Datos a tener en cuenta:
-- La clave primaria de la tabla AERONAVES es el número de serie (NUMSERIE), que es clave foránea en la tabla VIAJES (NUMSERIEAERONAVE).
-- La clave primaria de la tabla VUELOS es el código de vuelo (CODVUELO), que es clave foránea en la tabla VIAJES (CODVUELO).
-- La clave primaria de la tabla VIAJES es la fecha (FECHA) y el código de vuelo (CODVUELO).
-- El tipo de la columna HORASDEVUELO de la tabla AERONAVES es NUMBER(6,0).
-- El tipo de la columna DURACION de la tabla VUELOS es DATE, pero solo se usan las horas y los minutos, por lo que se puede usar el tipo DATE para almacenar la duración de los vuelos.

-- Antes de comenzar, cambiaré el tipo de columna de HORASDEVUELO de NUMBER(6,0) a NUMBER(12,2) para poder almacenar los decimales de las horas de vuelo:
ALTER TABLE AERONAVES MODIFY HORASDEVUELO NUMBER(12,2);
DESC AERONAVES;

-- Primero, creo la función F_DURACIONVUELO que recibe el código de vuelo y devuelve la duración del vuelo ya transformada en formato NUMBER:
CREATE OR REPLACE FUNCTION F_DURACIONVUELO(P_CODVUELO IN VUELOS.CODVUELO%TYPE)
RETURN AERONAVES.HORASDEVUELO%TYPE
IS
  VD_DURACIONVUELO AERONAVES.HORASDEVUELO%TYPE;
BEGIN
  SELECT ROUND(TO_NUMBER(TO_CHAR(DURACION, 'HH24')) + TO_NUMBER(TO_CHAR(DURACION, 'MI'))/60, 2)
  INTO VD_DURACIONVUELO
  FROM VUELOS
  WHERE CODVUELO = P_CODVUELO;
  RETURN VD_DURACIONVUELO;
END;
/

-- Compruebo que la función se ejecuta y da los resultados esperados:
SELECT F_DURACIONVUELO('IB-3949') FROM DUAL;
SELECT F_DURACIONVUELO('VY-3924') FROM DUAL;
SELECT F_DURACIONVUELO('QR-3776') FROM DUAL;

-- Ahora, creo el procedimiento P_SUMAHORASVUELO que recibe el código de vuelo y el número de serie de la aeronave. El código de vuelo se pasará a una función F_DURACIONVUELO que devolverá la duración del vuelo ya pasada de DATE ('HH24:MI') a NUMBER(12,2). Con el valor que devuelva la función, se sumará a la columna HORASDEVUELO de la tabla AERONAVES cuyo número de serie coincida con el que se ha pasado como parámetro:
CREATE OR REPLACE PROCEDURE P_SUMAHORASVUELO(P_CODVUELO IN VUELOS.CODVUELO%TYPE, P_NUMSERIEAERONAVE IN AERONAVES.NUMSERIE%TYPE)
IS
  VD_DURACIONVUELO AERONAVES.HORASDEVUELO%TYPE;
BEGIN
  VD_DURACIONVUELO := F_DURACIONVUELO(P_CODVUELO);
  UPDATE AERONAVES
  SET HORASDEVUELO = HORASDEVUELO + VD_DURACIONVUELO
  WHERE NUMSERIE = P_NUMSERIEAERONAVE;
END;
/

-- Creo el procedimiento antagonista del anterior, llamado P_RESTAHORASVUELO, que restará la duración del vuelo a la columna HORASDEVUELO de la tabla AERONAVES:
CREATE OR REPLACE PROCEDURE P_RESTAHORASVUELO(P_CODVUELO IN VUELOS.CODVUELO%TYPE, P_NUMSERIEAERONAVE IN AERONAVES.NUMSERIE%TYPE)
IS
  VD_DURACIONVUELO AERONAVES.HORASDEVUELO%TYPE;
BEGIN
  VD_DURACIONVUELO := F_DURACIONVUELO(P_CODVUELO);
  UPDATE AERONAVES
  SET HORASDEVUELO = HORASDEVUELO - VD_DURACIONVUELO
  WHERE NUMSERIE = P_NUMSERIEAERONAVE;
END;
/

-- El trigger T_ACTUALIZAHORASVUELO se ejecutará FOR EACH ROW y después de cada INSERT, UPDATE o DELETE en la tabla VIAJES. Pasará los valores CODVUELO y NUMSERIEAERONAVE a los procedimientos P_SUMAHORASVUELO y P_RESTAHORASVUELO según sean necesarios.
CREATE OR REPLACE TRIGGER T_ACTUALIZAHORASVUELO
AFTER INSERT OR UPDATE OR DELETE ON VIAJES
FOR EACH ROW
BEGIN
  CASE
    WHEN INSERTING THEN
      P_SUMAHORASVUELO(:NEW.CODVUELO, :NEW.NUMSERIEAERONAVE);
    WHEN UPDATING THEN
      P_RESTAHORASVUELO(:OLD.CODVUELO, :OLD.NUMSERIEAERONAVE);
      P_SUMAHORASVUELO(:NEW.CODVUELO, :NEW.NUMSERIEAERONAVE);
    WHEN DELETING THEN
      P_RESTAHORASVUELO(:OLD.CODVUELO, :OLD.NUMSERIEAERONAVE);
  END CASE;
END;
/

------------------------------------------------------------------------

-- Comprobaciones de que el trigger se ejecuta para cada sentencia con 3 pruebas distintas:

-- ## Prueba 1: ## --

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'F-GHQC'
OR NUMSERIE = 'S2-AFA';

INSERT INTO VIAJES VALUES (
  TO_DATE('20/09/2010', 'DD/MM/YYYY'), -- FECHA
  'IB-3949', -- CODVUELO, DURACIÓN: 1H
  'F-GHQC' -- NUMSERIEAERONAVE
);

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'F-GHQC'
OR NUMSERIE = 'S2-AFA';

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('20/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'IB-3949';

UPDATE VIAJES
SET NUMSERIEAERONAVE = 'S2-AFA'
WHERE CODVUELO = 'IB-3949'
AND FECHA = TO_DATE('20/09/2010', 'DD/MM/YYYY');

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('20/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'IB-3949';

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'F-GHQC'
OR NUMSERIE = 'S2-AFA';

DELETE FROM VIAJES
WHERE CODVUELO = 'IB-3949'
AND FECHA = TO_DATE('20/09/2010', 'DD/MM/YYYY');

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'F-GHQC'
OR NUMSERIE = 'S2-AFA';

-- ## Prueba 2: ## --

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'EP-NHT'
OR NUMSERIE = 'D-AIPM';

INSERT INTO VIAJES VALUES (
  TO_DATE('21/09/2010', 'DD/MM/YYYY'), -- FECHA
  'VY-3924', -- CODVUELO,
  'EP-NHT' -- NUMSERIEAERONAVE
);

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'EP-NHT'
OR NUMSERIE = 'D-AIPM';

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('21/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'VY-3924';

UPDATE VIAJES
SET NUMSERIEAERONAVE = 'D-AIPM'
WHERE CODVUELO = 'VY-3924'
AND FECHA = TO_DATE('21/09/2010', 'DD/MM/YYYY');

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('21/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'VY-3924';

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'EP-NHT'
OR NUMSERIE = 'D-AIPM';

DELETE FROM VIAJES
WHERE CODVUELO = 'VY-3924'
AND FECHA = TO_DATE('21/09/2010', 'DD/MM/YYYY');

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'EP-NHT'
OR NUMSERIE = 'D-AIPM';

-- ## Prueba 3: ## --

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'HZ-APH'
OR NUMSERIE = 'N918DH';

INSERT INTO VIAJES VALUES (
  TO_DATE('22/09/2010', 'DD/MM/YYYY'), -- FECHA
  'UX-6013', -- CODVUELO
  'HZ-APH' -- NUMSERIEAERONAVE
);

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'HZ-APH'
OR NUMSERIE = 'N918DH';

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('22/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'UX-6013';

UPDATE VIAJES
SET NUMSERIEAERONAVE = 'N918DH'
WHERE CODVUELO = 'UX-6013'
AND FECHA = TO_DATE('22/09/2010', 'DD/MM/YYYY');

SELECT *
FROM VIAJES
WHERE FECHA = TO_DATE('22/09/2010', 'DD/MM/YYYY')
AND CODVUELO = 'UX-6013';

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'HZ-APH'
OR NUMSERIE = 'N918DH';

DELETE FROM VIAJES
WHERE CODVUELO = 'UX-6013'
AND FECHA = TO_DATE('22/09/2010', 'DD/MM/YYYY');

SELECT NUMSERIE, HORASDEVUELO
FROM AERONAVES
WHERE NUMSERIE = 'HZ-APH'
OR NUMSERIE = 'N918DH';

------------------------------------------------------------------------

SELECT CODVUELO, TO_CHAR(DURACION, 'HH24:MI') AS DURACION FROM VUELOS;
SELECT NUMSERIE, HORASDEVUELO FROM AERONAVES;
SELECT * FROM VIAJES;
