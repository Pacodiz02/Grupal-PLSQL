--Realiza los módulos de programación necesarios para garantizar que una misma
--compañía no tiene más de dos vuelos con el mismo origen y destino en un mismo día
--de la semana.

--PRIMER PASO GUARDAR EN VARIABLES LA INFORMACIÓN QUE NECESITO GUARDAR

--EN ESTE PROBLEMA NECESITAMOS GUARDAR EN UNA TABLA EL NOMBRE DE LA COMPAÑÍA 
--CON LOS VUELOS DE ORIGEN Y DESTINO Y EL DÍA.

CREATE OR REPLACE PACKAGE PA_VUELOS_MISMO_DIA
AS
    TYPE R_VUELOS_DIAS IS RECORD (
        COMPANIA VUELOS.COMPANIA%TYPE,
        AEROPUERTOORIGEN VUELOS.CODAEROPUERTOORIGEN%TYPE,
        AEROPUERTODESTINO VUELOS.CODAEROPUERTODESTINO%TYPE,
        DIASEMANA VUELOS.DIASEMANA%TYPE
    );
    TYPE TR_VUELOS_DIAS IS TABLE OF R_VUELOS_DIAS
    INDEX BY BINARY_INTEGER;
    DATOS_VUELOS TR_VUELOS_DIAS;
END;
/

--AHORA CON UN TRIGGER TENEMOS QUE RELLENAR LA TABLA TEMPORAL.
CREATE OR REPLACE TRIGGER T_RELLENARVAR
BEFORE INSERT OR UPDATE OR DELETE ON VUELOS
DECLARE
    CURSOR C_DATOS IS 
    SELECT COMPANIA, CODAEROPUERTOORIGEN, CODAEROPUERTODESTINO, DIASEMANA
    FROM VUELOS;
    V_INDICE NUMBER :=0;
BEGIN
    FOR V_DATOS IN C_DATOS LOOP
        PA_VUELOS_MISMO_DIA.DATOS_VUELOS(V_INDICE).COMPANIA := V_DATOS.COMPANIA;
        PA_VUELOS_MISMO_DIA.DATOS_VUELOS(V_INDICE).AEROPUERTOORIGEN := V_DATOS.CODAEROPUERTOORIGEN;
        PA_VUELOS_MISMO_DIA.DATOS_VUELOS(V_INDICE).AEROPUERTODESTINO := V_DATOS.CODAEROPUERTODESTINO;
        PA_VUELOS_MISMO_DIA.DATOS_VUELOS(V_INDICE).DIASEMANA := V_DATOS.DIASEMANA;
        V_INDICE := V_INDICE + 1;
    END LOOP;
END;
/
--creamos el trigger principal. EL TRIGGER TIENE QUE CONTAR 
--LOS CAMPOS DE LA TABLA TEMPORAL CREADA EN EL OTRO TRIGGER
--CUANDO TIENEN LOS MISMOS DATOS Y QUE SALTE UN ERROR SI HAY
-- MAS DE DOS VUELOS.

CREATE OR REPLACE TRIGGER CONTROL_VUELOS
BEFORE INSERT OR UPDATE OR DELETE ON VUELOS
FOR EACH ROW
DECLARE
    V_CONTADOR NUMBER := 0;
    V_INICIO PLS_INTEGER;
    V_DATOS PA_VUELOS_MISMO_DIA.TR_VUELOS_DIAS;
BEGIN
    V_INICIO := PA_VUELOS_MISMO_DIA.DATOS_VUELOS.FIRST();
    V_DATOS := PA_VUELOS_MISMO_DIA.DATOS_VUELOS;
    WHILE V_INICIO IS NOT NULL LOOP
        IF UPDATING OR INSERTING THEN
            IF :NEW.COMPANIA = V_DATOS(V_INICIO).COMPANIA AND :NEW.CODAEROPUERTOORIGEN = V_DATOS(V_INICIO).AEROPUERTOORIGEN AND :NEW.CODAEROPUERTODESTINO = V_DATOS(V_INICIO).AEROPUERTODESTINO AND :NEW.DIASEMANA = V_DATOS(V_INICIO).DIASEMANA THEN
                 V_CONTADOR := V_CONTADOR + 1;
                IF V_CONTADOR = 2 THEN
                    RAISE_APPLICATION_ERROR(-20005,'La compañia no puede tener mas de 2 vuelos con el mismo origen y destino en ese día. '||V_CONTADOR);
                END IF;
            END IF;
        ELSIF DELETING THEN
            V_CONTADOR := V_CONTADOR - 1;
        END IF;
        V_INICIO := PA_VUELOS_MISMO_DIA.DATOS_VUELOS.NEXT(V_INICIO);
    END LOOP;
END;
/

--PRUEBAS CON INSERTS

INSERT INTO VUELOS VALUES (
    'CD-6015',
    'PMI',
    'MAD',
    'Air Europa',
    'Jueves',
    TO_DATE('14:15', 'HH24:MI'),
    'CVF000126',
    'FHY000456',
    782,
    TO_DATE('01:30','HH24:MI')
);

INSERT INTO VUELOS VALUES (
    'CD-6017',
    'PMI',
    'MAD',
    'Air Europa',
    'Jueves',
    TO_DATE('14:15', 'HH24:MI'),
    'CVF000126',
    'FHY000456',
    782,
    TO_DATE('01:30','HH24:MI')
);

INSERT INTO VUELOS VALUES (
    'XD-6018',
    'PMI',
    'MAD',
    'Air Europa',
    'Jueves',
    TO_DATE('14:15', 'HH24:MI'),
    'CVF000126',
    'FHY000456',
    782,
    TO_DATE('01:30','HH24:MI')
);

INSERT INTO VUELOS VALUES (
    'XD-6019',
    'PMI',
    'MAD',
    'Air Europa',
    'Jueves',
    TO_DATE('14:15', 'HH24:MI'),
    'CVF000126',
    'FHY000456',
    782,
    TO_DATE('01:30','HH24:MI')
);

DELETE FROM VUELOS WHERE CODVUELO='CD-6015';

DELETE FROM VUELOS WHERE CODVUELO='CD-6017';

DELETE FROM VUELOS WHERE CODVUELO='CD-6018';

DELETE FROM VUELOS WHERE CODVUELO='XD-6019';
